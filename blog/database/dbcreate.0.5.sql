-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema blog
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `USER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `USER` (
  `USERNAME` VARCHAR(32) NOT NULL,
  `PASSWORD` VARCHAR(64) NOT NULL,
  `NAME` VARCHAR(32) NULL,
  `LASTNAME` VARCHAR(64) NULL,
  `EMAIL` VARCHAR(64) NULL,
  `CREATION_DATE` DATETIME NOT NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `ENABLED` TINYINT(1) NOT NULL DEFAULT TRUE,
  PRIMARY KEY (`USERNAME`));


-- -----------------------------------------------------
-- Table `ENTRY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ENTRY` (
  `ENTRY_ID` INT NOT NULL AUTO_INCREMENT,
  `USERNAME` VARCHAR(32) NOT NULL,
  `TITLE` VARCHAR(256) NOT NULL,
  `DESCRIPTION` VARCHAR(1024) NULL,
  `BODY` TEXT NULL,
  `CREATION_DATE` DATETIME NOT NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `PUBLISHED` TINYINT(1) NOT NULL DEFAULT FALSE,
  PRIMARY KEY (`ENTRY_ID`),
  CONSTRAINT `FK_REL_USER_ENTRY`
    FOREIGN KEY (`USERNAME`)
    REFERENCES `USER` (`USERNAME`));

CREATE INDEX `FK_REL_USER_ENTRY_idx` ON `ENTRY` (`USERNAME` ASC);


-- -----------------------------------------------------
-- Table `TAG`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TAG` (
  `TAG_ID` INT NOT NULL AUTO_INCREMENT,
  `TAGNAME` VARCHAR(32) NOT NULL,
  `CREATION_DATE` DATETIME NOT NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  PRIMARY KEY (`TAG_ID`));


-- -----------------------------------------------------
-- Table `REL_ENTRY_TAG`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `REL_ENTRY_TAG` (
  `ENTRY_ID` INT NOT NULL,
  `TAG_ID` INT NOT NULL,
  PRIMARY KEY (`ENTRY_ID`, `TAG_ID`),
  CONSTRAINT `FK_REL_ENTRY_TAG`
    FOREIGN KEY (`ENTRY_ID`)
    REFERENCES `ENTRY` (`ENTRY_ID`)
    ON DELETE restrict
    ON UPDATE restrict,
  CONSTRAINT `FK_REL_ENTRY_TAG2`
    FOREIGN KEY (`TAG_ID`)
    REFERENCES `TAG` (`TAG_ID`)
    ON DELETE restrict
    ON UPDATE restrict);

CREATE INDEX `FK_REL_ENTRY_TAG2_idx` ON `REL_ENTRY_TAG` (`TAG_ID` ASC);

CREATE INDEX `FK_REL_ENTRY_TAG_idx` ON `REL_ENTRY_TAG` (`ENTRY_ID` ASC);


-- -----------------------------------------------------
-- Table `ROLE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ROLE` (
  `ROLE` VARCHAR(64) NOT NULL,
  `DESCRIPTION` VARCHAR(128) NULL,
  `CREATION_DATE` DATETIME NOT NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  PRIMARY KEY (`ROLE`));


-- -----------------------------------------------------
-- Table `REL_USER_ROLE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `REL_USER_ROLE` (
  `ROLE` VARCHAR(64) NOT NULL,
  `USERNAME` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`ROLE`, `USERNAME`),
  CONSTRAINT `FK_REL_USER_ROLE`
    FOREIGN KEY (`ROLE`)
    REFERENCES `ROLE` (`ROLE`)
    ON DELETE restrict
    ON UPDATE restrict,
  CONSTRAINT `FK_REL_USER_ROLE2`
    FOREIGN KEY (`USERNAME`)
    REFERENCES `USER` (`USERNAME`)
    ON DELETE restrict
    ON UPDATE restrict);

CREATE INDEX `FK_REL_USER_ROLE2_idx` ON `REL_USER_ROLE` (`USERNAME` ASC);

CREATE INDEX `FK_REL_USER_ROLE_idx` ON `REL_USER_ROLE` (`ROLE` ASC);


-- -----------------------------------------------------
-- Table `PAGE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PAGE` (
  `PAGE_ID` INT NOT NULL AUTO_INCREMENT,
  `USERNAME` VARCHAR(32) NOT NULL,
  `TITLE` VARCHAR(256) NOT NULL,
  `BODY` TEXT NULL,
  `CREATION_DATE` DATETIME NOT NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `MENU_ORDER` INT NOT NULL DEFAULT 0,
  `MENU_TITLE` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`PAGE_ID`),
  CONSTRAINT `FK_PAGE_USER`
    FOREIGN KEY (`USERNAME`)
    REFERENCES `USER` (`USERNAME`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `FK_REL_USER_PAGE_idx` ON `PAGE` (`USERNAME` ASC);


-- -----------------------------------------------------
-- Table `FOLDER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FOLDER` (
  `FOLDER_ID` INT NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(64) NOT NULL,
  `CREATION_DATE` DATETIME NOT NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  PRIMARY KEY (`FOLDER_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RESOURCE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `RESOURCE` (
  `RESOURCE_ID` INT NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(64) NOT NULL,
  `CREATION_DATE` DATETIME NOT NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `FOLDER_ID` INT NOT NULL,
  `USERNAME` VARCHAR(32) NOT NULL,
  `CONTENT_TYPE` VARCHAR(64) NOT NULL,
  `SIZE` DOUBLE NOT NULL,
  PRIMARY KEY (`RESOURCE_ID`),
  CONSTRAINT `FK_RESOURCE_FOLDER`
    FOREIGN KEY (`FOLDER_ID`)
    REFERENCES `FOLDER` (`FOLDER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_RESOURCE_USER`
    FOREIGN KEY (`USERNAME`)
    REFERENCES `USER` (`USERNAME`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_RESOURCE_FOLDER_idx` ON `RESOURCE` (`FOLDER_ID` ASC);

CREATE INDEX `fk_RESOURCE_USER_idx` ON `RESOURCE` (`USERNAME` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
