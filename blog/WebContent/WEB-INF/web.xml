<?xml version="1.0" encoding="UTF-8"?>

<!-- 	
	(c) 2018 Antonio Perdices.
	License: Public Domain.
	You can use this code freely and wisely in your applications.
-->

<web-app id="SimpleBlogger_ID" version="3.0" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_3_0.xsd">

	<display-name>simpleblogger</display-name>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
	<!--
		Location of the XML file that defines the root application context.
		Applied by ContextLoaderListener.
	-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/config/web-application-config.xml</param-value>
	</context-param>
	
	<!--
        Location of the Log4J config file, for initialization and refresh checks.
		In Servlet 3.0 and newer web applications Log4j 2 is automatically loaded
		by a ServletContainerInitializer (Log4jServletContainerInitializer).
	-->
    <context-param>
        <param-name>log4jConfiguration</param-name>
        <param-value>/WEB-INF/config/log4j2.xml</param-value>
    </context-param>
    
	<!--
		Loads the root application context of this web app at startup.
		Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
		to access it anywhere in the web application, outside of the framework.
		
		The root context is the parent of all servlet-specific contexts.
		This means that its beans are automatically available in these child contexts,
		both for getBean(name) calls and (external) bean references.
	 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 
		Enable Request Character Encoding Filter.
		Servlet 2.3/2.4 filter that allows one to specify a character encoding for
		requests. This is useful because current browsers typically do not set a
		character encoding even if specified in the HTML page or form. 
	-->	
    <filter>
        <filter-name>SetCharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    
    <filter-mapping>
        <filter-name>SetCharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>	
	
	<!-- 
		Enable Spring Security Filter.
	-->
	<filter>
    	<filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
    	<filter-name>springSecurityFilterChain</filter-name>
     	<url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <!--
    	Servlet 2.3 Filter that binds a JPA EntityManager to the thread for the entire processing of the request.
    	This allow for lazy loading in web views despite the original transactions already being completed.
    	Supports a "entityManagerFactoryBeanName" filter init-param in web.xml; the default bean name is "entityManagerFactory".
    -->
	<filter>
		<filter-name>OpenEntityManagerInView</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>OpenEntityManagerInView</filter-name>
		<url-pattern>/app/*</url-pattern>
	</filter-mapping>
	
	<!--
	        The front controller of this Spring Web application,
	        responsible for handling all application requests.
	-->
	<servlet>
		<servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!--
		        Override default context configuration file location (/WEB-INF/[servlet-name]-config.xml).
		        Leave blank to avoid trying to load configuration file from default location.
		-->
		<init-param>
		        <param-name>contextConfigLocation</param-name>
		        <param-value></param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<!-- Map all /spring/* requests to the Spring MVC Dispatcher Servlet for handling. -->
	<servlet-mapping>
	    <servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
	    <url-pattern>/app/*</url-pattern>
	</servlet-mapping>

</web-app>
